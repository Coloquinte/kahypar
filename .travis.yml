# Travis-CI build script for KaHyPar

language: cpp

# Ubuntu 14.04 Trusty support
sudo: required
dist: trusty

addons:


matrix:
  include:
    # gcc 6 - Debug Build
    - env: CMAKE_CC="gcc-6" CMAKE_CXX="g++-6" BUILD_TYPE="Debug" COMPILER_FLAGS=""
      os: linux
      addons: &gcc6
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - cmake-data
            - g++-6
            - libboost-program-options1.55.0
            - libboost-program-options1.55-dev
            - lcov
        sonarcloud:
          organization: "sebastianschlag-github"
          token:
            secure: "keXaJUgHgUQnfLV9Fg/q1IB0X7rfvV5Wm19bFPz2v7nn9Hd4PiGKj9vCkFeH5zFvT+thzatKiYp6IVbf0kvowbree28YFlNd82jCql76UcvPhyHju7UbrM7/ClDcolaft5T2fLz5jthOdoCaPXOcfIcGt3mIMZ6HLLYbXtxubTAUbhcYPI/0PoUzGjIvX5jZnfY2vWDbKllB7t2SIR1mw+hV0F+TXLedCbf0WfUAsdX5Ls/OE6E7OWFNNKLmCFkt9kmaV9NVQh2CreU5SHbYHFDU+ow4PKUOjnGj2XCtV36B48uZwmwCFEkQ3q6zjDlhxBO87mbw6uae1zDdj9lRI3cO8D/uvfU/RvQrhpXbZeVqvR7X8i5ydShq8C37eCPy1mzMluJ1EfoTmMO+D+BtBd35w9rl/U1SwlrO4rVhEkLs2Tg8nzx/fjK9/VtNihKMfiyFzFO6nw4AIk5RV+PaaQtHkgyRgPr5dxuuK71HiPNvZ2xYTpA27N6092r+1fKFdWF2W0owa3H39IqJ/08QwPnzSDv20jYneVqxRrDSGHVCak9OX0hJvEQJVfgImNRuZJAzrYyydu1TTRLwxXAWFcxkxaaMNDTsrRv5tcEKHLEvC6+B3O4zj2sU5tTLuZrHz9BR23rBuGw0mpP0KiKJPDKsnVYLJgtopIbDndAA1s8="

    # gcc 6 - Release Build
    - env: CMAKE_CC="gcc-6" CMAKE_CXX="g++-6" BUILD_TYPE="Release" COMPILER_FLAGS="" COV="OFF"
      os: linux
      addons: *gcc6

    # gcc 6 - CodeCov
    - env: CMAKE_CC="gcc-6" CMAKE_CXX="g++-6" BUILD_TYPE="Debug" COMPILER_FLAGS="" COV="ON"
      os: linux
      addons: *gcc6

      # gcc 6 - RelWithDebInfo Build - end to end tests
    - env: CMAKE_CC="gcc-6" CMAKE_CXX="g++-6" BUILD_TYPE="RelWithDebInfo" COMPILER_FLAGS="" COV="OFF"
      os: linux
      addons: *gcc6

    # clang 3.7 on MacOSX
    - env: CMAKE_CC="clang" CMAKE_CXX="clang++" BUILD_TYPE="Debug" COMPILER_FLAGS="" COV="OFF"
      os: osx

    - env: CMAKE_CC="clang" CMAKE_CXX="clang++" BUILD_TYPE="Release" COMPILER_FLAGS="" COV="OFF"
      os: osx

before_script:
  # print out some version numbers
  - $CMAKE_CXX --version
  - cmake --version

  # configure
  - mkdir build; cp sonar-project.properties build; cd build
  - cmake
      -DCMAKE_BUILD_TYPE="$BUILD_TYPE"
      -DCMAKE_C_COMPILER="$CMAKE_CC" -DCMAKE_CXX_COMPILER="$CMAKE_CXX" -DKAHYPAR_USE_GCOV="$COV"
      -DCMAKE_C_FLAGS="$COMPILER_FLAGS" -DCMAKE_CXX_FLAGS="$COMPILER_FLAGS"
      $CMAKE_ARGS ..

script:
  - |
    if [[ "$BUILD_TYPE" == "Debug" && "$CMAKE_CXX" == "g++-6" && "$COV" == "OFF" ]]; then
      build-wrapper-linux-x86-64 --out-dir bw-output make -j4;
      sonar-scanner;
    elif [[ "$BUILD_TYPE" == "Debug" && "$CMAKE_CXX" == "g++-6" && "$COV" == "ON" ]]; then
      make -j4;
    elif [[ "$BUILD_TYPE" == "Release" && "$CMAKE_CXX" == "g++-6" ]]; then
      build-wrapper-linux-x86-64 --out-dir bw-output make integration_tests;
      sonar-scanner;
      ../scripts/run_regression_tests.sh;
    else
      make -j4;
    fi

after_success:
  - |
    if [[ "$BUILD_TYPE" == "Debug" && "$CMAKE_CXX" == "g++-6" && "$COV" == "ON" ]]; then
      cd ${TRAVIS_BUILD_DIR};
      lcov --directory . --capture --output-file coverage.info;
      lcov --remove coverage.info '/usr/*' --output-file coverage.info;
      lcov --list coverage.info;
      bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
    fi

cache:
  directories:
    - '$HOME/.sonar/cache'
